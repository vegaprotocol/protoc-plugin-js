import join from '../../../utils/join.js'
import { relative } from 'path'

export default function ({
  name,
  path,
  messages,
  enums,
  packages
}) {
  return reexportCJS({
    path,
    messages,
    enums,
    packages
  })
}

function reexportCJS ({
  path,
  messages,
  enums,
  packages
}) {
  return join`
    /// autogenerated by protoc-plugin-js
    module.exports = {
      ${[
      ...packages.map(p => `${p.identifier}: require('./${relative(path, p.path)}')`),
      ...enums.map(e => `${e.identifier}: require('./${relative(path, e.path)}')`),
      ...messages.map(m => `${m.identifier}: require('./${relative(path, m.path)}')`)
    ].join(',\n')}
    }
  `
}

function reexportESM ({
  path,
  messages,
  enums,
  packages
}) {
  return join`
    /// autogenerated by protoc-plugin-js
    ${packages.map(p =>
    `export * as ${p.identifier} from './${relative(path, p.path)}'`
  )}

    ${enums.map(e =>
    `export * as ${e.identifier} from './${relative(path, e.path)}'`
  )}

    ${messages.map(m =>
    `export * as ${m.identifier} from './${relative(path, m.path)}'`
  )}
  `
}
